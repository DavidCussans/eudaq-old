#############################################################################
# Makefile for building: wolfschu
# Generated by Artem Kravchenko on: ?? 30. ??? 22:14:59 2010
# Project:  
# Template: 
#############################################################################

####### Compiler, tools and options
CC            = cl
CXX           = cl
DEFINES       = /D WIN32 /D NDEBUG /D _LIB /D EUDAQ_PLATFORM=PF_WIN32 /D _UNICODE \
				/D UNICODE
CFLAGS        = 
CXXFLAGS      = /c /Zi /nologo /W3 /WX- /O2 /Oy- /GL /Gm- /EHsc /MD /GS \
				/fp:precise	/Zc:wchar_t /Zc:forScope /Gd /TP /analyze- \
				/errorReport:prompt \
				/Fd"tmp\vc100.pdb" /Fo"tmp\\"
INCPATH       = -I"." -I"inc" -I"$(INCLUDE)" /I"include"  /I"..\extern\pthread-win32\include" 
LINK          = link
LIB			  = lib
LIBFLAGS	  = /NOLOGO /LTCG 
LFLAGS        = /LIBPATH:"$(ROOTSYS)\lib" /LTCG /INCREMENTAL:NO /SUBSYSTEM:CONSOLE \
				/OPT:REF /OPT:ICF /LTCG /TLBID:1 
LIBS          = kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib \
				advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib \
				odbccp32.lib WS2_32.lib
QMAKE         = c:\1\Qt\4.7.1\bin\qmake.exe
IDC           = c:\1\Qt\4.7.1\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory
OBJECTS_DIR   = tmp

####### File
SOURCES       = src\bufferserializer.cc 	\
				src\commandreceiver.cc 	\
				src\configuration.cc		\
				src\datacollector.cc		\
				src\datasender.cc			\
				src\dummyproducer.cc		\
				src\event.cc				\
				src\exception.cc			\
				src\logger.cc				\
				src\logmessage.cc			\
				src\logsender.cc			\
				src\mutex.cc				\
				src\optionparser.cc		\
				src\pluginmanager.cc		\
				src\producer.cc			\
				src\rawdataevent.cc		\
				src\runcontrol.cc			\
				src\serializable.cc		\
				src\standardevent.cc		\
				src\status.cc				\
				src\stringevent.cc			\
				src\time.cc				\
				src\tluevent.cc			\
				src\transportbase.cc		\
				src\transportclient.cc		\
				src\transportfactory.cc	\
				src\transportnull.cc		\
				src\transportserver.cc		\
				src\transporttcp.cc		\
				src\utils.cc				
OBJECTS       = tmp\bufferserializer.obj \
				tmp\commandreceiver.obj \
				tmp\configuration.obj \
				tmp\datacollector.obj \
				tmp\datasender.obj \
				tmp\dummyproducer.obj \
				tmp\event.obj \
				tmp\exception.obj \
				tmp\logger.obj \
				tmp\logmessage.obj \
				tmp\logsender.obj \
				tmp\mutex.obj \
				tmp\optionparser.obj \
				tmp\pluginmanager.obj \
				tmp\producer.obj \
				tmp\rawdataevent.obj \
				tmp\runcontrol.obj \
				tmp\serializable.obj \
				tmp\standardevent.obj \
				tmp\status.obj \
				tmp\stringevent.obj \
				tmp\time.obj \
				tmp\tluevent.obj \
				tmp\transportbase.obj \
				tmp\transportclient.obj \
				tmp\transportfactory.obj \
				tmp\transportnull.obj \
				tmp\transportserver.obj \
				tmp\transporttcp.obj \
				tmp\utils.obj 
				
DESTDIR        = tmp\ 
TARGET         = libeudaq.lib
DESTDIR_TARGET = ..\bin\libeudaq.lib

####### Implicit rules
.SUFFIXES: .c .cpp .cc .cxx
# part for compilation
{src\}.cc{tmp\}.obj::
	$(CXX) $(CXXFLAGS) $(INCPATH)  $(DEFINES) @<<
	$<
<<

####### Build rules
all: $(DESTDIR_TARGET)
# part for link
$(DESTDIR_TARGET):  $(OBJECTS) 
	$(LIB) $(OBJECTS) $(LIBFLAGS) /OUT:$(DESTDIR_TARGET) @<< 
	  
<<
#	mt.exe -nologo -manifest "release\wolfschu.intermediate.manifest" -outputresource:$(DESTDIR_TARGET);1
	

####### Compile

tmp\bufferserializer.obj:	src\bufferserializer.cc
tmp\commandreceiver.obj: 	src\commandreceiver.cc
tmp\configuration.obj: 		src\configuration.cc
tmp\datacollector.obj: 		src\datacollector.cc
tmp\datasender.obj: 		src\datasender.cc
tmp\dummyproducer.obj: 		src\dummyproducer.cc
tmp\event.obj: 				src\event.cc
tmp\exception.obj: 			src\exception.cc
tmp\logger.obj: 			src\logger.cc
tmp\logmessage.obj: 		src\logmessage.cc
tmp\logsender.obj: 			src\logsender.cc
tmp\mutex.obj: 				src\mutex.cc
tmp\optionparser.obj: 		src\optionparser.cc
tmp\pluginmanager.obj: 		src\pluginmanager.cc
tmp\producer.obj: 			src\producer.cc
tmp\rawdataevent.obj: 		src\rawdataevent.cc
tmp\runcontrol.obj: 		src\runcontrol.cc
tmp\serializable.obj: 		src\serializable.cc
tmp\standardevent.obj: 		src\standardevent.cc
tmp\status.obj: 			src\status.cc
tmp\stringevent.obj: 		src\stringevent.cc
tmp\time.obj: 				src\time.cc
tmp\tluevent.obj: 			src\tluevent.cc
tmp\transportbase.obj: 		src\transportbase.cc
tmp\transportclient.obj: 	src\transportclient.cc
tmp\transportfactory.obj: 	src\transportfactory.cc
tmp\transportnull.obj: 		src\transportnull.cc
tmp\transportserver.obj: 	src\transportserver.cc
tmp\transporttcp.obj: 		src\transporttcp.cc
tmp\utils.obj: 				src\utils.cc
